<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Chain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//light = instance_create(x + sprite_width /2, y + sprite_height / 2, Light);

//X and Y coordinates of healthbar elements
positions[0, 0] = 608;
positions[0, 1] = 70;

positions[1, 0] = 573;
positions[1, 1] = 134;

positions[2, 0] = 605;
positions[2, 1] = 193;

positions[3, 0] = 670;
positions[3, 1] = 195;

positions[4, 0] = 711;
positions[4, 1] = 137;

positions[5, 0] = 677;
positions[5, 1] = 73;

for(var i = 0; i &lt; PlayerObject.maxhealth; i++){
    lights[i] = instance_create(positions[i, 0], 
        positions[i, 1], SmallLight);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0];
y = view_yview[0];

for(var i = 0; i &lt; 6; i++){
    lights[i].x = x + positions[i, 0];
    lights[i].y = y + positions[i, 1];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

/*if(keyboard_check(ord('1'))){
    global.pressed = 1;
}else if(keyboard_check(ord('2'))){
    global.pressed = 2;
}*/

for(var i = 0; i &lt; 6; i++){
    lights[i].lightStrength = 0;
}

for(i = 0; i &lt; PlayerObject.maxhealth; i++){
    lights[i].lightStrength = 1;
    draw_sprite(PlayerHP, 0, 
        ChainObj.x + positions[i, 0],
        ChainObj.y + positions[i, 1]);
}

if(PlayerObject.weapon == weapons.bullet1){
    draw_sprite(Rune1, 0, x + 639, y + 136);
}else if(PlayerObject.weapon == weapons.bullet2){
    draw_sprite(Rune2, 0, x + 639, y + 136);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
