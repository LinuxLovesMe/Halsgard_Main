<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialogue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width / 2;
y = room_height / 2;

xx = x - sprite_width / 2;
yy = y - sprite_height / 2; 

input_text = instance_create(xx + 300, yy + 650, obj_input_text);


companion = icon_oldman;

file = file_text_open_read("advisor_text1.txt");

info = 0;
while(!file_text_eof(file))
{
    str = file_text_readln(file);
    if (string_pos("#", str) != 0)
    {
        sub_str = string_copy(str, 0, 5);
        
        num = real(string_digits(sub_str));
        if(num != 0)
            info[num - 1, 0] = str;
        k = 1;
    }
    if (string_pos("@", str) != 0)
    {
        if(num != 0)
            info[num - 1, k++] = str;
    }
}
file_text_close(file);

pointer = 0;
string_w = sprite_width - 300;
separator = 36;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check input text 
if(input_text.text_entered)
{
    for(k = 1; k &lt; array_length_1d(text); k++)
    {
        if(string_pos(input_text.txt, info[pointer, k]) != 0)
        {  
            pointer = real(string_digits(info[pointer, k])) - 1;
        }
    }
    input_text.txt = "";
    input_text.text_entered = false;
               
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(Kramola2);
draw_sprite(icon_player, 0, xx + 130, yy + 510);
draw_text_colour(xx + 90, yy + 600, "Эйд", c_white, c_white, c_white, c_white, 1);

draw_sprite(companion, 0, xx + 130, yy + 100);
draw_text_colour(xx + 40, yy + 200, "Советник", c_white, c_white, c_white, c_white, 1);

draw_set_font(Kramola);
draw_text_colour(xx + 30, yy + 250, "Осталось АР: 3", c_white, c_white, c_white, c_white, 1);
draw_text_colour(xx + 30, yy + 270, "Принадлежность: -", c_white, c_white, c_white, c_white, 1);
draw_text_colour(xx + 30, yy + 290, "Дружелюбность: 5", c_white, c_white, c_white, c_white, 1);

text = 0;
text[0] = info[pointer, 0];

for(k = 1; k &lt; array_length_2d(info, pointer); k++)
{
    text[k] = info[pointer, k];
}

for(k = 0; k &lt; array_length_1d(text); k++)
{
    sub_str = string_copy(text[k], 0, 5);
    num = string_digits(sub_str);
    text[k] = string_replace_all(text[k], "#", "");
    text[k] = string_replace_all(text[k], "@", "");
    text[k] = string_replace_all(text[k], num, "");
}

draw_text_ext_transformed_colour(
    xx + 270, yy + 20, text[0],
    separator, string_w,
    1, 1, 0,
    c_white, c_white, c_white, c_white, 1
);
offset = 470;
for(k = 1; k &lt; array_length_2d(info, pointer); k++)
{
    draw_text_ext_transformed_colour(
        xx + 270, yy + offset, text[k],
        separator, sprite_width - 300,
        1, 1, 0,
        c_white, c_white, c_white, c_white, 1
    );
    offset += separator + separator * floor(string_width(info[pointer, k]) / string_w);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
