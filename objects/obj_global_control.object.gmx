<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-800</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum paused{
    pause,
    non_pause
}

pause = paused.non_pause;

instance_create(160, 336, obj_textcontrol);
instance_create(160, 336, obj_cursor);
audio_sound_gain(walk_sound, 0.2, 0);

instance_create(160, 336, obj_inventory);

instance_create(160, 336, obj_dialogue_control);
instance_deactivate_object(obj_dialogue_control);

set_pause_from_other = false;

//Es gibt Situationen, wenn man nicht pause
//mit ESC benutzen koennen
esc_forbidden = false;

dialogue_on = false;

back_to_circle = false;//This variable set up when 
//Player goe back to dialogue_control
//And will be readen from other objects

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set blur
surf_blur_pass = surface_create(view_wview[0], view_hview[0]);
application_surface_draw_enable(false);
uscale = shader_get_uniform(shader_blur, "u_Scale" );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax
parallax[0] = 0;

for(var i = 0; background_visible[i] and i &lt; 5; i++)
{
    parallax[i] = background_x[i] / 100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pause = paused.non_pause)
{
    with(obj_moved)
        state = old_state;
    with(obj_playable)
        playable = true;
    if(!esc_forbidden)
        obj_inventory.hidden = true;
}    
else if(pause = paused.pause)
{
    with(obj_moved)
        state = "pause";
    with(obj_playable)
        playable = false;
    if(!esc_forbidden)
        obj_inventory.hidden = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(set_pause_from_other)
{
    set_pause_from_other = false;
    
    if(pause == paused.pause)
    {
        if(instance_exists(obj_rain))
            obj_rain.pause_emit = true;
        alarm[0] = 1;
        with(obj_moved)
            old_state = state;
        with(obj_playable)
            playable = false;
    }    
    else if(pause == paused.non_pause)
    {
        if(instance_exists(obj_rain))
            obj_rain.pause_emit = false;
        alarm[0] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If dialogue is on

if(dialogue_on)
{
    if(!instance_exists(obj_dialogue_control))
        instance_activate_object(obj_dialogue_control);
}
else
{
    if(instance_exists(obj_dialogue_control))
        instance_deactivate_object(obj_dialogue_control);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax step

for(var i = 0; background_visible[i] and i &lt; 5; i++)
{
    background_x[i] = parallax[i] * view_xview;
    //parallax[i] = background_x[i];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw blur shader

draw_surface(application_surface, 0, 0);
surface_reset_target();

if(pause == paused.pause and esc_forbidden)
{
    if !surface_exists(surf_blur_pass)
        surf_blur_pass = surface_create(view_wview[0], view_hview[0]);

    shader_set(shader_blur);
    shader_set_uniform_f(uscale, 0.003, 0.0);
    surface_set_target(surf_blur_pass);
    draw_surface(application_surface, 0, 0);
    surface_reset_target();
    shader_set_uniform_f(uscale, 0.0, 0.004);
    draw_surface(surf_blur_pass, 0, 0);
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pause == paused.pause and !esc_forbidden)
{
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_pause_vignette, 0, 
        view_xview[0], view_yview[0],
        1, 1, 0, c_white, 0.5);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!dialogue_on)//Escape from dialogue with this button too
{
    if(pause == paused.non_pause and !esc_forbidden)
    {
        pause = paused.pause;
        if(instance_exists(obj_rain))
            obj_rain.pause_emit = true;
        alarm[0] = 1;
        with(obj_moved)
            old_state = state;
        with(obj_playable)
            playable = false;
    }    
    else if(pause == paused.pause and !esc_forbidden)
    {
        pause = paused.non_pause;
        if(instance_exists(obj_rain))
            obj_rain.pause_emit = false;
        alarm[0] = 1;//We set alarm because obj_rain must be triggered in its Step
    }
}
else
    dialogue_on = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
