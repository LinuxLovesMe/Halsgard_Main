<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory_cell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hidden = true;

mouse_take = false;
cell_num = 0;

temp = 0;

xx = 0;
yy = 0;

old_x = 0;
old_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!hidden)
{
    for(var i = 0; i &lt; ds_list_size(global.inventory); i++)
    {
        xx = view_xview[0] + 300 + 150 * cos((i * 45) * pi / 180);
        yy = view_yview[0] + 300 + 150 * sin((i * 45) * pi / 180);
        
         if(point_in_rectangle(mouse_x, mouse_y, 
            xx - sprite_width / 2, yy - sprite_width / 2,
            xx + sprite_width / 2, yy + sprite_width / 2))
         {
            var temp2 = ds_list_find_value(global.inventory, i);
            if(temp2 == 0)
            { 
                ds_list_insert(global.inventory, i, temp);
                ds_list_insert(global.inventory, cell_num, 0);
            }
            else
            {
                ds_list_insert(global.inventory, i, temp);
                ds_list_insert(global.inventory, cell_num, temp2);
            }
         }  
    }
    mouse_take = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!hidden)
{
    if(!mouse_take)
    {
        for(var i = 0; i &lt; ds_list_size(global.inventory); i++)
        {
            xx = view_xview[0] + 300 + 150 * cos((i * 45) * pi / 180);
            yy = view_yview[0] + 300 + 150 * sin((i * 45) * pi / 180);
            if(point_in_rectangle(mouse_x, mouse_y, 
                xx - sprite_width / 2, yy - sprite_width / 2,
                xx + sprite_width / 2, yy + sprite_width / 2))
            {
                temp = ds_list_find_value(global.inventory, i);
                mouse_take = true;
                cell_num = i;
                old_x = x;
                old_y = y;
                break;
            }    
        }
    }
    else
    {
        temp.x = mouse_x;
        temp.y = mouse_y;   
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!hidden)
{
    for(var i = 0; i &lt; ds_list_size(global.inventory); i++)
    {   
        
        if(ds_list_find_value(global.inventory, i) != 0)
        {
            
            temp_a = ds_list_find_value(global.inventory, i);
            if(mouse_take)
            {
                if(i != cell_num)
                {
                    temp_a.x = view_xview[0] + 300 + 150 * cos((i * 45) * pi / 180);
                    temp_a.y = view_yview[0] + 300 + 150 * sin((i * 45) * pi / 180);
                }
            }
            else
            {
                temp_a.x = view_xview[0] + 300 + 150 * cos((i * 45) * pi / 180);
                temp_a.y = view_yview[0] + 300 + 150 * sin((i * 45) * pi / 180);
            }
            if(temp_a.sprite_width != sprite_get_width(spr_inventory_cell)
                xor temp_a.sprite_height != sprite_get_width(spr_inventory_cell))
            {
                if(temp_a.sprite_width &gt; temp_a.sprite_height)
                {
                    temp_a.image_xscale = sprite_get_width(spr_inventory_cell) / temp_a.sprite_width * 0.8;   
                    temp_a.image_yscale = sprite_get_width(spr_inventory_cell) / temp_a.sprite_width * 0.8;       
                }
                else
                {
                    temp_a.image_xscale = sprite_get_width(spr_inventory_cell) / temp_a.sprite_height * 0.8;   
                    temp_a.image_yscale = sprite_get_width(spr_inventory_cell) / temp_a.sprite_height * 0.8;
                }
            }
            draw_sprite_ext(temp_a.sprite_index, 0, 
                temp_a.x, temp_a.y,
                temp_a.image_xscale, temp_a.image_yscale,
                0, c_white, 1);
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!hidden)
{
    for(var i = 0; i &lt; ds_list_size(global.inventory); i++)
    {
        draw_sprite(spr_inventory_cell, 0,
            view_xview[0] + 300 + 150 * cos((i * 45) * pi / 180),
            view_yview[0] + 300 + 150 * sin((i * 45) * pi / 180));    
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
