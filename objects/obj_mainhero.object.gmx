<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum weapons{
    bullet1,
    bullet2
};
weapon = weapons.bullet1;

hero_state = "falling";
grav = 1;
vert_speed = 0;
move_speed = 5;
jump_speed = 24;

maxhealth = 8;
jumped = false;

platformCondition = false;

color_warning = c_orange;
color_danger = make_color_hsv(0, 250, 180);

//For shooting state
shooted = false;
hand_hspeed = 0;
hand_vspeed = 0;
reverse = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Position on ground

platformCondition = position_meeting(x, y + 1, obj_platform) 
    and instance_nearest(x, y, obj_platform).visible == true;

onGround  = platformCondition or !place_free(x, y + 1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate rotation of hand

if(hero_state == "shoot")
{
    if(abs(hand_hspeed) &lt; 5 and abs(hand_vspeed) &lt; 5)
    {
        reverse = false;
        hand_hspeed -= cos(angle * (pi / 180));
        hand_vspeed += sin(angle * (pi / 180));
    }else
    {
        if(reverse and (hand_hspeed &lt; 0 and hand_vspeed &gt; 0))
        {
            hand_hspeed += cos(angle * (pi / 180));
            hand_vspeed -= sin(angle * (pi / 180));
        }else
        {
            hero_state = "idle";
        }
        reverse = true;
    }
}else
{
    hand_hspeed = 0;
    hand_vspeed = 0;
    reverse = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = left

if (hero_state == "left")
{
    x -= move_speed;
    image_speed = 0.2;
    if(onGround)
    {
        sprite_index = spr_hero_walk;
        image_xscale = 1;
        if(keyboard_check_released(ord('A')))
            hero_state = "idle";
            
        
    }else
        hero_state = "falling";
    
        
    if (!audio_is_playing(walk_sound))
        audio_play_sound(walk_sound, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = right

if (hero_state == "right")
{
    x += move_speed;
    image_speed = 0.2;
    if(onGround)
    {
        sprite_index = spr_hero_walk;
        image_xscale = -1;
        if(keyboard_check_released(ord('D')))
            hero_state = "idle";
            
        
    }else
        hero_state = "falling";
    
        
    if (!audio_is_playing(walk_sound))
        audio_play_sound(walk_sound, 10, false);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = idle

if (hero_state == "idle")
{
    image_speed = 0.04;
    if(onGround){
        sprite_index = spr_hero_idle;
        
        if(keyboard_check(ord('A')))
            hero_state = "left";
            
        if(keyboard_check(ord('D')))
            hero_state = "right";
        
    }
    else
        hero_state = "falling";
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = fall

if (hero_state == "falling")
{       
    if(onGround)
        hero_state = "idle";
    else
    {    
        y += jump_speed;
        image_speed = 0;
        sprite_index = spr_hero_jump;
        image_index = 4;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = jump

if (hero_state == "jump")
{
    if (vert_speed &lt; 14)
        vert_speed += grav;
    
    if(keyboard_check(ord('A')))
    {
        x -= 5;
        image_xscale = 1;
    }
    if(keyboard_check(ord('D')))
    {
        x += 5;
        image_xscale = -1;
    }       
    image_speed = 0.3;
    sprite_index = spr_hero_jump;
    
    if (image_index &gt;= 4 and !onGround)
        image_index = 4;
    
    if (image_index &gt; 4 and image_index &lt; 5 and onGround)
    {
        image_index = 5;
        jumped = false;
    }
    
    if (image_index &gt;= 5.7)
        hero_state = "idle";
    
    if (onGround)
    {
        if (!jumped)
            vert_speed = 0;
        else
            vert_speed = -jump_speed;
    }

    if (!onGround)
        audio_stop_sound(walk_sound);

    y += vert_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (onGround)
{
    hero_state = "jump";
    vert_speed = -jump_speed;
    jumped = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((maxhealth - 2) &gt;= 0)
{
    maxhealth -= 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
