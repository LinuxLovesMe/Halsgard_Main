<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-900</depth>
  <persistent>0</persistent>
  <parentName>obj_playable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Read file

angle = 0;
coords = 0;
rotated = false;
old_angle = 0;

this_info = ds_map_create();
info = 0;
save_inf = "";

file = file_text_open_read("text2.txt");
while(!file_text_eof(file))
{
    str = file_text_readln(file);
    if (string_pos("%Th", str) != 0)
    {
        sub_str = string_copy(str, 0, 5);
        num = real(string_digits(sub_str));
        str = string_replace_all(str, "%Th", "");
        num2 = string(num);
        str = string_replace_all(str, num2, "");
        
        if(num == 1)
            save_inf = str;
        if num != 0 and num != 1
        {
            ds_map_add(this_info, save_inf, info);
            info = 0;
            save_inf = str;
        }
    }
    if (string_pos("#", str) != 0)
    {
        sub_str = string_copy(str, 0, 5);
        
        num = real(string_digits(sub_str));
        if(num != 0)
            info[num - 1, 0] = str;
        k = 1;
    }
    if (string_pos("@", str) != 0)
    {
        if(num != 0)
            info[num - 1, k++] = str;
    }
}
ds_map_add(this_info, save_inf, info);//Add the last element

file_text_close(file);

separator = 36;
dialogue_window = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create dialogue window

event_inherited();

center_x = view_xview[0] + view_wview[0] / 2; 
center_y = view_yview[0] + view_hview[0] / 2; 

//Vertices of triangle button
triangle_x1 = center_x - 50;
triangle_y1 = center_y + 50;
triangle_x2 = center_x + 50;
triangle_y2 = center_y + 50;
triangle_x3 = center_x;
triangle_y3 = center_y + 50 + 86.6;

//Compute coordinates for eight variants of choose  
for(var i = 0; i &lt; 8; i++)
{
    //X coordinate
    coords[i, 0] = center_x - 
    (sprite_get_width(spr_dialogue22) / 2 - 50) * 
    cos((-angle + i * 45) * pi / 180);
    //Y coordinate
    coords[i, 1] = center_y - 
    (sprite_get_height(spr_dialogue22) / 2 - 50) * 
     sin((-angle + i * 45) * pi / 180);   
     //Angle (to rotate a sprite)
     coords[i, 2] = angle - i * 45 - 90;
}

dialogue_new = instance_create(center_x - sprite_get_width(spr_dialogue) / 2,
    center_y - sprite_get_height(spr_dialogue) / 2, 
    obj_dialogue_new);
instance_deactivate_object(obj_dialogue_new);
instance_deactivate_object(obj_slider_vert);
instance_deactivate_object(obj_bar_vert);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playable)
{
    if(rotated)
    {
        angle += 1;
        if(angle &gt;= old_angle + 45)
            rotated = false;
    }
    
    if(angle &gt;= 360)
        angle = 0;
    
    //Draw circles in center    
    center_x = view_xview[0] + view_wview[0] / 2; 
    center_y = view_yview[0] + view_hview[0] / 2; 
    
    //Vertices of triangle button
    triangle_x1 = center_x - 50;
    triangle_y1 = center_y + 50;
    triangle_x2 = center_x + 50;
    triangle_y2 = center_y + 50;
    triangle_x3 = center_x;
    triangle_y3 = center_y + 50 + 86.6;
    
    //Compute coordinates for eight variants of choose  
    for(var i = 0; i &lt; 8; i++)
    {
        //X coordinate
        coords[i, 0] = center_x - 
        (sprite_get_width(spr_dialogue22) / 2 - 50) * 
        cos((-angle + i * 45) * pi / 180);
        //Y coordinate
        coords[i, 1] = center_y - 
        (sprite_get_height(spr_dialogue22) / 2 - 50) * 
         sin((-angle + i * 45) * pi / 180);   
         //Angle (to rotate a sprite)
         coords[i, 2] = angle - i * 45 - 90;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playable)
{
    if(point_in_circle(mouse_x, mouse_y,
        center_x, center_y,
        sprite_get_width(spr_dialogue22) / 2))
    {
        if(!point_in_circle(mouse_x, mouse_y,
            center_x, center_y,
            sprite_get_width(spr_dialogue23) / 2))
        {
            if(!rotated)
            {
                rotated = true;  
                old_angle = angle;      
            }
        }   
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Draw three rings
draw_sprite_ext(spr_dialogue21, 0,
    center_x,
    center_y,
    1, 1,
    0, c_white, 1);
  
draw_sprite_ext(spr_dialogue22, 1,
    center_x,
    center_y,
    1, 1,
    angle, c_white, 1);
      
draw_sprite_ext(spr_dialogue23, 2,
    center_x,
    center_y,
    1, 1,
    0, c_white, 1);
      
  //Draw triangle-button
draw_triangle_colour(
    triangle_x1, triangle_y1,
    triangle_x2, triangle_y2,
    triangle_x3, triangle_y3,
    c_white, c_white, c_white, false);
  
for(var i = 0; i &lt; 8; i++)
{
    if(i &lt; ds_map_size(this_info))
    {
        if(i == 0)
            first = ds_map_find_first(this_info);   
        else
            first = ds_map_find_next(this_info, first);
        draw_circle_colour(coords[i, 0], coords[i, 1], 40, c_white, c_white, false);
        text = first;
    }
    else
    {
        text = "Вы не можете сейчас открыть этот диалог";
        draw_circle_colour(coords[i, 0], coords[i, 1], 40, c_red, c_red, false);
    }
    //Draw number on circle
    draw_text_ext_transformed_colour(coords[i, 0], coords[i, 1], 
        string(i + 1), 1, 100, 1, 1, coords[i, 2],
        c_black, c_black, c_black, c_black, 1);
          
    //Write message about dialog in center
    //If circle is under triangle
    if(coords[i, 0] - 10 &lt; triangle_x3 
        and coords[i, 0] + 10 &gt; triangle_x3
        and coords[i, 1] &gt; triangle_y3)
    {
        draw_set_colour(c_white);
        draw_set_font(Underdog_20);
        draw_text_ext(center_x - sprite_get_width(spr_dialogue23) / 3,
            center_y - sprite_get_height(spr_dialogue23) / 3,
            text, separator, sprite_get_width(spr_dialogue23));
          
        if(playable)
        {
            //Check if the button is pressed
            if(point_in_triangle(mouse_x, mouse_y,
                triangle_x1, triangle_y1,
                triangle_x2, triangle_y2,
                triangle_x3, triangle_y3))
            {
                if(mouse_check_button_released(mb_left))
                {
                    //If button is pressed, send data to dialogue window and
                    //deactivate self
                    if(i &lt; ds_map_size(this_info))
                    {
                        instance_activate_object(obj_dialogue_new);
                        instance_activate_object(obj_slider_vert);
                        instance_activate_object(obj_bar_vert);
                        dialogue_new.set_data = true;
                        dialogue_new.info = ds_map_find_value(this_info, first);
                        dialogue_new.pointer = 0;
                        //instance_deactivate_object(obj_dialogue_control);
                        obj_global_control.dialogue_on = false;
                    }
                }
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
