<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum cards{
    archer,
    mage,
    warrior
};
randomize();

oldman_cards = ds_list_create();
player_cards = ds_list_create();

cards_number = 6;

t = 0;
for(i = 0; i &lt; cards_number; i++){
    temp = instance_create(200 + t, -500, oldman_card);
    ds_list_add(oldman_cards, temp);
    v = ds_list_find_value(oldman_cards, ds_list_size(oldman_cards) - 1);
    v.value = choose(cards.archer, cards.warrior, cards.mage);
    v.angle = 0;//Angle - side of card
    
    temp = instance_create(-200, 200, player_card);
    ds_list_add(player_cards, temp);
    v = ds_list_find_value(player_cards, ds_list_size(player_cards) - 1);
    v.value = choose(cards.archer, cards.warrior, cards.mage);
    v.angle = 180;
    v.moved = true;
    v.point_x[0] = 150 + t;
    v.point_y[0] = 500;
    
    t += 120;
}

winner = 0;

global.played_card_oldman = 0;
global.played_card_player = 0;

alarm[0] = room_speed * 5;

move_round = 2;

scale = 1;
temp = 0;

total_score = 0;
rounds = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.played_card_oldman = v;
game_round = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Alarm when oldman's card appears on screen

for(var k = 0; k &lt; ds_list_size(player_cards); k++){
    v = ds_list_find_value(player_cards, k);
    v.clickable = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.played_card_oldman.moved = true;
global.played_card_oldman.point_x[0] = global.played_card_oldman.x;
global.played_card_oldman.point_y[0] = 10000;
global.played_card_oldman.card_speed = 15;

global.played_card_player.moved = true;
global.played_card_player.point_x[0] = global.played_card_player.x;
global.played_card_player.point_y[0] = 10000;
global.played_card_player.card_speed = 15;

global.played_card_oldman = 0;
global.played_card_player = 0;

temp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_round = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Total score
/*
if(game_ends and !stop)
{
    scores = winner;

    for(var a = 0; a &lt; 5; a++)
    {
        if scores[a] == 2
            scores[a] = -1;
        total_score += scores[a];
    }
}

*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check round

if(global.played_card_oldman != 0
    and global.played_card_player != 0
    and game_round)    
{
    
    scale = 2;//Icon scaling
    
    var scores = 0;
    //scores = 1 -&gt; win
    //      = -1 -&gt; lose
    //      = 0 -&gt; status quo
    
    // Archer beats warrior
    // Mage beats archer
    // Warrior beats mage
    
    switch(global.played_card_player.value)
    {
    
        case game_cards.archer:
        {
            scores = global.played_card_oldman.value - 1;
            if(scores == 0)
                scores -= 1;
            else if(scores == -1)
                scores += 1;
            break;
        }
        
        case game_cards.mage:
        {
            scores = global.played_card_oldman.value - 1;
            scores = -scores;
            break;
        }
        
        case game_cards.warrior:
        {
            scores = global.played_card_oldman.value - 1;
            if(scores == 1)
                scores = 0;
            else if(scores == 0)
                scores = 1;
            break;
        }
    }
    
    winner = scores;
    total_score += winner;
    
    if(winner == -1)
        winner = 2;// 2 is oldman, 1 is player, 0 - noone
    
    game_round = false;
    alarm[1] = room_speed * 3;

    rounds++;    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If computer moves

if(move_round == 0 and temp == 0 and rounds &lt; 6)//0 - computer first
{
    i = random(ds_list_size(oldman_cards) - 1);
    v = ds_list_find_value(oldman_cards, i);
    ds_list_delete(oldman_cards, i);
    
    v.point_x[0] = 500;
    v.point_y[0] = 300;
    v.moved = true;
    
    global.played_card_oldman = v;
    
    alarm[2] = room_speed * 5;
    
    game_round = true;
    
    temp = 1;
    move_round = 1;//1 - player first
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If player moves

if(move_round == 1 and temp == 0)//0 - computer first
{
    with(player_card)
        clickable = true;
    
    if(global.played_card_player != 0)
    {
        v = 0;   
        for(var k = 0; k &lt; ds_list_size(oldman_cards) - 1; k++)
        {
            if(global.played_card_player.value == 0
                and ds_list_find_value(oldman_cards, k ).value == 1
                
                or global.played_card_player.value == 1
                and ds_list_find_value(oldman_cards, k ).value == 2
                
                or global.played_card_player.value == 2
                and ds_list_find_value(oldman_cards, k ).value == 0)
            {
                v = ds_list_find_value(oldman_cards, k);
                ds_list_delete(oldman_cards, k);
                break;
            }
        }
        if(v == 0)
        {
            i = random(ds_list_size(oldman_cards) - 1);
            v = ds_list_find_value(oldman_cards, i);
            ds_list_delete(oldman_cards, i);
        }
        
        v.point_x[0] = 500;
        v.point_y[0] = 300;
        v.moved = true;
        
        alarm[3] = room_speed * 8;
        //global.played_card_oldman = v;
        
        //game_round = true;
    
        move_round = 0;
        temp = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(player_card)
    instance_destroy();
    
with(oldman_card)
    instance_destroy();
    
ds_list_destroy(oldman_cards);
ds_list_destroy(player_cards);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t = 0;

if(scale &gt; 1)
    scale -= 0.05;

if(global.played_card_oldman != 0
    and global.played_card_player != 0){

        draw_sprite_ext(game_icon, 
        winner, 
        400, 300,
        scale, scale,
        0, c_white, 1
    );
}

if(rounds = 6){
    draw_set_colour(c_white);
    draw_set_font(Kramola);
    if(total_score &gt; 0)
        draw_text(400, 100, "Эйд победил");
    else if(total_score &lt; 0)
        draw_text(400, 100, "Советник победил");
    else if(total_score == 0)
        draw_text(400, 100, "Ничья");
    stop = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
