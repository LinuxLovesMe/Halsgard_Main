<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_draugr_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-80</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

walk_speed = 3.5;
maxhealth = 2;
attack_chance = 0.6;
attack_speed = 100;

near = false;
sprite_index = spr_draugr_rising;
state = "rise";
image_speed = 0;

seePlayer = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = approach to player

if (state == "approach")
{
    randomize();
    sprite_index = spr_draugr_walk;
    image_speed = random_range(0.08, 0.11);
    
    if (abs(x - obj_mainhero.x) &lt; random_range(40, 60))
        state = "punch";
    
    if(!see_player)
        state = "stay";              
       
    if (x &gt; obj_mainhero.x)
    {
        hspeed = -random_range(1.0, 2.4);
        image_xscale = 1;
    }
    else
    {
        hspeed = random_range(1.0, 2.4);
        image_xscale = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = punch

if(state == "punch")
{
    hspeed = 0;
    sprite_index = spr_draugr_punch;
    image_speed = 0.2;   
    
    if(abs(x - obj_mainhero.x) &gt; 50)
        state = "approach";   
    
    if(!see_player)
        state = "stay";
        
    if (x &gt; obj_mainhero.x)
        image_xscale = 1;
    else
        image_xscale = -1;         
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = stay

if(state == "stay")
{
    sprite_index = spr_draugr_walk;
    image_index = 0;
    image_speed = 0;
    hspeed = 0;
    if(!forget)
    {
        forget = true;
        alarm[0] = room_speed * 1.5;
    }
    if(see_player)
        state = "approach";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = fall
if(state == "fall")
{
    if(onGround)
        state = "walk";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If health = 0
event_inherited();

if (maxhealth &lt;= 0)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = rise;

event_inherited();

if (state == "rise")
{
    image_index += 0.2;
    if (image_index &gt;= 7)
    {
        state = "walk";
        sprite_index = spr_draugr_walk;
        image_index = 0;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State = walk

if (state == "walk")
{
/*if(seePlayer){        
        if(x &lt; obj_mainhero.x)
            image_xscale = -1;
        else if(x &gt; obj_mainhero.x)
            image_xscale = 1;
        
        if(abs(x - obj_mainhero.x) &lt; abs(sprite_width))
            near = true;
            
        else
           near = false;
           
        if(!near){
            if(image_index &gt; 1 and image_index &lt; 4){
                if(x &gt; obj_mainhero.x)
                    hspeed = -2;
                else
                    hspeed = 2;
            }else
                hspeed = 0;
        }else
            hspeed = 0;
    }*/
    randomize();
    image_speed = random_range(0.08, 0.11);
    sprite_index = spr_draugr_walk;
    
    if(see_player)
        state = "approach";

    if(x &lt; 100)
        image_xscale = -1;   
    if(x &gt; room_width - 100)
        image_xscale = 1;   
    
    if(image_xscale == -1)
        hspeed = random_range(1.0, 2.4);
    else
        hspeed = -random_range(1.0, 2.4);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rune_1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) instance_destroy();
maxhealth --;
if (maxhealth == 0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
