<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>PlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hero_state = "fly";
grav = 0.5;
vert_speed = 0;
move_speed = 5;
jump_speed = 20;

jumped = false;

event_inherited();
enum weapons{
    bullet1,
    bullet2
};

weapon = weapons.bullet1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///From Entity

healthbar = instance_create(0, 0, HEObject);
healthbar.visible = false;
maxhealth = 6;
pointsInHealth = 5;
health = maxhealth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if((!place_free(x, y + 1) 
    or position_meeting(x, y + 1, Platform))
    and hero_state == "fly"){
    
    hero_state = "idle";
}

if (hero_state == "fly")
{
    y += jump_speed;
    image_speed = 0;
    sprite_index = PlayerJump;
    image_index = 4;
}

if (hero_state == "idle")
{
    image_speed = 0.04;
    sprite_index = PlayerIdle;
}

if (hero_state == "shoot")
{
    image_speed = 0.25;
    sprite_index = Shooter1;
    if (image_index &gt; image_number - 0.4)
    {
        hero_state = "idle";
    }
}

if (hero_state == "left")
{
    if (x &gt; 56)
    {
        image_speed = 0.2;
        if(!place_free(x, y + 1)
            or position_meeting(x, y + 1, Platform)) 
        {
            sprite_index = PlayerWalk;
        }
        image_xscale = 1;
        /*if (!audio_is_playing(walk_sound))
        {
            audio_play_sound(walk_sound, 10, false);
        }*/
    }
}

if (hero_state == "right")
{
    image_speed = 0.2;
    if(!place_free(x, y + 1)
        or position_meeting(x, y + 1, Platform))
    {
            sprite_index = PlayerWalk;
    }
    image_xscale = -1;
    /*if (!audio_is_playing(walk_sound))
    {
        audio_play_sound(walk_sound, 10, false);
    }*/
}

if (hero_state == "jump")
{
    if (vert_speed &lt; 14)
    {
        vert_speed += grav;
    }
    
    image_speed = 0.3;
    sprite_index = PlayerJump;
    
    if (image_index &gt;= 4 and !(!place_free(x, y + 1)
        or position_meeting(x, y + 1, Platform)))
    {
        image_index = 4;
    }
    
    if (image_index &gt; 4 and image_index &lt; 5 and (!place_free(x, y + 1)
        or position_meeting(x, y + 1, Platform)))
    {
        image_index = 5;
        jumped = false;
    }
    
    if (image_index &gt;= 5.7)
    {
        hero_state = "idle";
    }
    
    if (!place_free(x, y + 1)
        or position_meeting(x, y + 1, Platform))
    {
        if (!jumped)
        {
            vert_speed = 0;
        }
        else
        {
            vert_speed = -jump_speed;
        }
    }

    /*if (place_free(x, y + 1))
    {
        audio_stop_sound(walk_sound);
    }*/

    y += vert_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x &lt; room_width)
{
    if (!place_free(x, y + 1) 
        or position_meeting(x, y + 1, Platform))
    {
        hero_state = "right";
    }else{
        if(hero_state != "jump")
            hero_state = "fly";
    }
    x += move_speed;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x &gt; 0)
{
    if (!place_free(x, y + 1)
        or position_meeting(x, y + 1, Platform))
    {
        hero_state = "left";
    }else{
        if(hero_state != "jump")
            hero_state = "fly";
    }
    x -= move_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x, y + 1)
    or position_meeting(x, y + 1, Platform))
{
    hero_state = "jump";
    vert_speed = -jump_speed;
    jumped = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hero_state == "idle" or hero_state == "shoot")
{
    if(weapon == weapons.bullet1)
        runicBullet = instance_create(x, y - sprite_height / 2, BulletObj);
    if(weapon == weapons.bullet2)
        runicBullet = instance_create(x, y - sprite_height / 2, Bullet2Obj); 
    
    runicBullet.xCreate = x;
    runicBullet.yCreate = y;
    if (image_xscale &gt; 0)
    {
        runicBullet.direction = 180;
    }
    else
    {
        runicBullet.direction = 0;
    }
    sprite_index = Shooter2;
    hero_state = "shoot";
    runicBullet.speed = 18;        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x, y + 1)
    or position_meeting(x, y + 1, Platform))
{
    hero_state = "idle";
}else{
    if(hero_state != "jump")
        hero_state = "fly";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!place_free(x, y + 1)
    or position_meeting(x, y + 1, Platform))
{
    hero_state = "idle";
}else{
    if(hero_state != "jump")
        hero_state = "fly";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
