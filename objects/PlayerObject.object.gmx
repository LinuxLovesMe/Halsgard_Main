<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>PlayerStay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>Entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
enum weapons{
    bullet1,
    bullet2
};

maxhealth = 6;

weapon = weapons.bullet1;
image_speed = 0.3;
animation = "stay";

shooted = false;
angle = 0;

handHSpeed = 0;
handVSpeed = 0;
reverse = false;

cooldown = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(EndOfGame);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(shooted){
    animation = "shoot";
    sprite_index = PlayerShoot;
    image_index = 0;   
}else{
    if(animation == "shoot")
        animation = "stay";
}

if(animation == "stay"){
    sprite_index = PlayerStay;
}
if(animation == "right" or animation == "left"){
    sprite_index = PlayerWalk;
    if(image_index &gt; 7)
        animation = "stay";
}
if(animation == "jump"){
    sprite_index = PlayerJump;
    if(image_index &gt;=  4 and (place_free(x, y + 1) or !place_meeting(x, y + 1, Platform)))
        image_index = 4;
    if(image_index &lt; 5 and (!place_free(x, y + 1) or place_meeting(x, y + 1, Platform)))
        image_index = 5;
    if(image_index &gt;= 5.7)
        animation = "stay";  
}

if(maxhealth &lt;= 0){
    animation = "fall";
    sprite_index = PlayerFall;    
    if(image_index &gt; 5)
        image_index = 5;
    if (alarm[1] == -1)
        alarm[1] = room_speed * 3;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(shooted){
    if(abs(handHSpeed) &lt; 5 and abs(handVSpeed) &lt; 5){
        reverse = false;
        handHSpeed -= cos(angle * (pi / 180));
        handVSpeed += sin(angle * (pi / 180));
    }else{
        if(reverse and (handHSpeed &lt; 0 and handVSpeed &gt; 0)){
            handHSpeed += cos(angle * (pi / 180));
            handVSpeed -= sin(angle * (pi / 180));    
        }else{
            shooted = false;
        }
        reverse = true;
    }
}else{
    handHSpeed = 0;
    handVSpeed = 0;
    reverse = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!place_free(x, y + 1) or place_meeting(x, y + 1, Platform)){//If hero stays at ground
    vspeed = -22;
    animation = "jump";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x &lt; room_width){
    if(!place_free(x, y + 1) or place_meeting(x, y + 1, Platform))
       animation = "right";
    image_xscale = 1;
    x += 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x &gt; 0){
    //if(shootPrepare)
    //    shootPrepare = false;
    if(!place_free(x, y + 1) or place_meeting(x, y + 1, Platform))
        animation = "left";
    image_xscale = -1;
    x -= 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//shootPrepare = true;

if(!shooted){
    shooted = true;
    
    angle = point_direction(x, y - sprite_height / 2, mouse_x, mouse_y);
    if((angle &gt; 270 and angle &lt; 360 or  angle &gt; 0 and angle &lt; 90) and image_xscale == 1
        or angle &gt; 90 and angle &lt; 270 and image_xscale == -1){
    
        if(weapon == weapons.bullet1)
                bullet = instance_create(x, y - sprite_height / 2, BulletObj);
        if(weapon == weapons.bullet2)
            bullet = instance_create(x, y - sprite_height / 2, Bullet2Obj);       
        bullet.speed = 15;
        bullet.direction = angle;
        
        bullet.xCreate = x;
        bullet.yCreate = y;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


//if(global.level == 0){
    /*healthbar.x = GeneralInfo.x + 300;
    healthbar.y = GeneralInfo.y + 20;
    for(i = 0; i &lt; maxhealth; i++){
        healthbar.x += 2;
       draw_sprite(PlayerHP, 0, healthbar.x + 
            sprite_get_width(PlayerHP) * i, healthbar.y);
    }*/
/*    healthbar.x = ChainObj.x + positions[0, 0];
    healthbar.y = ChainObj.y + positions[1, 0];
    for(i = 0; i &lt; maxhealth; i++){
        //healthbar.x += 2;
        draw_sprite(PlayerHP, 0, 
            ChainObj.x + positions[i, 0],
            ChainObj.y + positions[i, 1]);
    }
}*/

draw_self();
/*if(shootPrepare){
    angle = point_direction(x, y - sprite_height / 2, mouse_x, mouse_y);
    if((angle &gt; 270 and angle &lt; 360 or  angle &gt; 0 and angle &lt; 90) and image_xscale == 1){
        draw_sprite_ext(PlayerHand, 0, x,
            y - sprite_height / 2,
            1, 1, angle, c_white, 1);
    }
    if(angle &gt; 90 and angle &lt; 270 and image_xscale == -1){
        draw_sprite_ext(PlayerHand, 1, x,
            y - sprite_height / 2,
            1, 1, angle - 180, c_white, 1);   
    }
}
 */   
if(shooted){
    if((angle &gt; 270 and angle &lt; 360 or  angle &gt; 0 and angle &lt; 90) and image_xscale == 1){
        draw_sprite_ext(PlayerHand, 0,
            x + handHSpeed,
            y - sprite_height / 2 + handVSpeed,
            1, 1, angle, c_white, 1);
    }
    if(angle &gt; 90 and angle &lt; 270 and image_xscale == -1){
        draw_sprite_ext(PlayerHand, 1,
            x + handHSpeed,
            y - sprite_height / 2 + handVSpeed,
            1, 1, angle - 180, c_white, 1);   
    }

/*    draw_sprite_ext(PlayerHand, 1, 
        x + handHSpeed, 
        y - sprite_height / 2 + handVSpeed,
        1, 1, angle, c_white, 1);    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxhealth--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(shootPrepare){
    shootPrepare = false;
    shooted = true;*/
    //This is parabolic trajectory code
    
    /*angle = point_direction(x, y, mouse_x, mouse_y);
    if((angle &gt; 270 and angle &lt; 360 or  angle &gt; 0 and angle &lt; 90) and image_xscale == 1
        or angle &gt; 90 and angle &lt; 270 and image_xscale == -1){
    
        if(weapon == weapons.bullet1)
            bullet = instance_create(x, y - sprite_height / 2, BulletObj);
        if(weapon == weapons.bullet2)
            bullet = instance_create(x, y - sprite_height / 2, Bullet2Obj);
               
        bullet.hspeed = cos(angle * (pi / 180)) * 15;
        bullet.vspeed = -sin(angle * (pi / 180)) * 15;
    
        bullet.xCreate = x;
        bullet.yCreate = y;
        
        x -= 5;
    }*/
    
/*    angle = point_direction(x, y - sprite_height / 2, mouse_x, mouse_y);
    if((angle &gt; 270 and angle &lt; 360 or  angle &gt; 0 and angle &lt; 90) and image_xscale == 1
        or angle &gt; 90 and angle &lt; 270 and image_xscale == -1){
    
        if(weapon == weapons.bullet1)
                bullet = instance_create(x, y - sprite_height / 2, BulletObj);
        if(weapon == weapons.bullet2)
            bullet = instance_create(x, y - sprite_height / 2, Bullet2Obj);
               
        bullet.speed = 15;
        bullet.direction = angle;
        
        bullet.xCreate = x;
        bullet.yCreate = y;
    }
    
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
